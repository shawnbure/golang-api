definitions:
  data.ApiResponse:
    properties:
      data: {}
      error:
        type: string
    type: object
  data.Asset:
    properties:
      collectionID:
        type: integer
      createdAt:
        type: integer
      id:
        type: integer
      link:
        type: string
      listed:
        type: boolean
      nonce:
        type: integer
      ownerId:
        type: integer
      priceNominal:
        type: number
      royaltiesPercent:
        type: number
      tokenID:
        type: string
    type: object
  handlers.createTokenRequest:
    properties:
      address:
        type: string
      message:
        type: string
      signature:
        type: string
    type: object
  handlers.tokenPayload:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
host: localhost:5000
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: erdsea-api
  version: "1.0"
paths:
  /assets/token/{tokenId}/nonce/{nonce}:
    get:
      consumes:
      - application/json
      description: retrieves an asset by tokenId and nonce
      parameters:
      - description: token id
        in: path
        name: tokenId
        required: true
        type: string
      - description: token nonce
        in: path
        name: nonce
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Asset'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/data.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/data.ApiResponse'
      summary: get asset by token by id and nonce
      tags:
      - assets
  /auth/access:
    post:
      consumes:
      - application/json
      description: creates an access credentials
      parameters:
      - description: create credentials request
        in: body
        name: tokenRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.createTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.tokenPayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/data.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/data.ApiResponse'
      summary: access credentials
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refreshes the access credentials
      parameters:
      - description: refresh credentials request
        in: body
        name: refreshRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.tokenPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.tokenPayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/data.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/data.ApiResponse'
      summary: refresh credentials
      tags:
      - auth
swagger: "2.0"
